/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.viadeo.data.bean;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NewPhotosNews extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NewPhotosNews\",\"namespace\":\"com.viadeo.data.bean\",\"fields\":[{\"name\":\"memberId\",\"type\":\"int\"},{\"name\":\"firstName\",\"type\":[\"string\",\"null\"]},{\"name\":\"lastName\",\"type\":[\"string\",\"null\"]},{\"name\":\"gender\",\"type\":[\"int\",\"null\"]},{\"name\":\"hasPhoto\",\"type\":\"boolean\"}]}");
  @Deprecated public int memberId;
  @Deprecated public CharSequence firstName;
  @Deprecated public CharSequence lastName;
  @Deprecated public Integer gender;
  @Deprecated public boolean hasPhoto;

  /**
   * Default constructor.
   */
  public NewPhotosNews() {}

  /**
   * All-args constructor.
   */
  public NewPhotosNews(Integer memberId, CharSequence firstName, CharSequence lastName, Integer gender, Boolean hasPhoto) {
    this.memberId = memberId;
    this.firstName = firstName;
    this.lastName = lastName;
    this.gender = gender;
    this.hasPhoto = hasPhoto;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return memberId;
    case 1: return firstName;
    case 2: return lastName;
    case 3: return gender;
    case 4: return hasPhoto;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: memberId = (Integer)value$; break;
    case 1: firstName = (CharSequence)value$; break;
    case 2: lastName = (CharSequence)value$; break;
    case 3: gender = (Integer)value$; break;
    case 4: hasPhoto = (Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'memberId' field.
   */
  public Integer getMemberId() {
    return memberId;
  }

  /**
   * Sets the value of the 'memberId' field.
   * @param value the value to set.
   */
  public void setMemberId(Integer value) {
    this.memberId = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   */
  public CharSequence getFirstName() {
    return firstName;
  }

  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   */
  public CharSequence getLastName() {
    return lastName;
  }

  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'gender' field.
   */
  public Integer getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(Integer value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'hasPhoto' field.
   */
  public Boolean getHasPhoto() {
    return hasPhoto;
  }

  /**
   * Sets the value of the 'hasPhoto' field.
   * @param value the value to set.
   */
  public void setHasPhoto(Boolean value) {
    this.hasPhoto = value;
  }

  /** Creates a new NewPhotosNews RecordBuilder */
  public static com.viadeo.data.bean.NewPhotosNews.Builder newBuilder() {
    return new com.viadeo.data.bean.NewPhotosNews.Builder();
  }

  /** Creates a new NewPhotosNews RecordBuilder by copying an existing Builder */
  public static com.viadeo.data.bean.NewPhotosNews.Builder newBuilder(com.viadeo.data.bean.NewPhotosNews.Builder other) {
    return new com.viadeo.data.bean.NewPhotosNews.Builder(other);
  }

  /** Creates a new NewPhotosNews RecordBuilder by copying an existing NewPhotosNews instance */
  public static com.viadeo.data.bean.NewPhotosNews.Builder newBuilder(com.viadeo.data.bean.NewPhotosNews other) {
    return new com.viadeo.data.bean.NewPhotosNews.Builder(other);
  }

  /**
   * RecordBuilder for NewPhotosNews instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NewPhotosNews>
    implements org.apache.avro.data.RecordBuilder<NewPhotosNews> {

    private int memberId;
    private CharSequence firstName;
    private CharSequence lastName;
    private Integer gender;
    private boolean hasPhoto;

    /** Creates a new Builder */
    private Builder() {
      super(com.viadeo.data.bean.NewPhotosNews.SCHEMA$);
    }

    /** Creates a Builder by copying an existing Builder */
    private Builder(com.viadeo.data.bean.NewPhotosNews.Builder other) {
      super(other);
    }

    /** Creates a Builder by copying an existing NewPhotosNews instance */
    private Builder(com.viadeo.data.bean.NewPhotosNews other) {
            super(com.viadeo.data.bean.NewPhotosNews.SCHEMA$);
      if (isValidValue(fields()[0], other.memberId)) {
        this.memberId = data().deepCopy(fields()[0].schema(), other.memberId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gender)) {
        this.gender = data().deepCopy(fields()[3].schema(), other.gender);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hasPhoto)) {
        this.hasPhoto = data().deepCopy(fields()[4].schema(), other.hasPhoto);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'memberId' field */
    public Integer getMemberId() {
      return memberId;
    }

    /** Sets the value of the 'memberId' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder setMemberId(int value) {
      validate(fields()[0], value);
      this.memberId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /** Checks whether the 'memberId' field has been set */
    public boolean hasMemberId() {
      return fieldSetFlags()[0];
    }

    /** Clears the value of the 'memberId' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder clearMemberId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'firstName' field */
    public CharSequence getFirstName() {
      return firstName;
    }

    /** Sets the value of the 'firstName' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder setFirstName(CharSequence value) {
      validate(fields()[1], value);
      this.firstName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /** Checks whether the 'firstName' field has been set */
    public boolean hasFirstName() {
      return fieldSetFlags()[1];
    }

    /** Clears the value of the 'firstName' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'lastName' field */
    public CharSequence getLastName() {
      return lastName;
    }

    /** Sets the value of the 'lastName' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder setLastName(CharSequence value) {
      validate(fields()[2], value);
      this.lastName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /** Checks whether the 'lastName' field has been set */
    public boolean hasLastName() {
      return fieldSetFlags()[2];
    }

    /** Clears the value of the 'lastName' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'gender' field */
    public Integer getGender() {
      return gender;
    }

    /** Sets the value of the 'gender' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder setGender(Integer value) {
      validate(fields()[3], value);
      this.gender = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /** Checks whether the 'gender' field has been set */
    public boolean hasGender() {
      return fieldSetFlags()[3];
    }

    /** Clears the value of the 'gender' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder clearGender() {
      gender = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'hasPhoto' field */
    public Boolean getHasPhoto() {
      return hasPhoto;
    }

    /** Sets the value of the 'hasPhoto' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder setHasPhoto(boolean value) {
      validate(fields()[4], value);
      this.hasPhoto = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /** Checks whether the 'hasPhoto' field has been set */
    public boolean hasHasPhoto() {
      return fieldSetFlags()[4];
    }

    /** Clears the value of the 'hasPhoto' field */
    public com.viadeo.data.bean.NewPhotosNews.Builder clearHasPhoto() {
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public NewPhotosNews build() {
      try {
        NewPhotosNews record = new NewPhotosNews();
        record.memberId = fieldSetFlags()[0] ? this.memberId : (Integer) defaultValue(fields()[0]);
        record.firstName = fieldSetFlags()[1] ? this.firstName : (CharSequence) defaultValue(fields()[1]);
        record.lastName = fieldSetFlags()[2] ? this.lastName : (CharSequence) defaultValue(fields()[2]);
        record.gender = fieldSetFlags()[3] ? this.gender : (Integer) defaultValue(fields()[3]);
        record.hasPhoto = fieldSetFlags()[4] ? this.hasPhoto : (Boolean) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
